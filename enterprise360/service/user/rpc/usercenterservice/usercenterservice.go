// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package usercenterservice

import (
	"context"

	"enterprise360/service/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest    = user.LoginRequest
	LoginResponse   = user.LoginResponse
	RegUserRequest  = user.RegUserRequest
	RegUserResponse = user.RegUserResponse

	UserCenterService interface {
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		Register(ctx context.Context, in *RegUserRequest, opts ...grpc.CallOption) (*RegUserResponse, error)
	}

	defaultUserCenterService struct {
		cli zrpc.Client
	}
)

func NewUserCenterService(cli zrpc.Client) UserCenterService {
	return &defaultUserCenterService{
		cli: cli,
	}
}

func (m *defaultUserCenterService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserCenterServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserCenterService) Register(ctx context.Context, in *RegUserRequest, opts ...grpc.CallOption) (*RegUserResponse, error) {
	client := user.NewUserCenterServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}
