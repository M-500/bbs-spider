// Code generated by goctl. DO NOT EDIT.
// Source: search.proto

package searchsvr

import (
	"context"

	"enterprise360/service/search/rpc/types/search"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Company              = search.Company
	People               = search.People
	SearchPeopleResponse = search.SearchPeopleResponse
	SearchRequest        = search.SearchRequest
	SearchResponse       = search.SearchResponse
	SyncCompanyRequest   = search.SyncCompanyRequest
	SyncCompanyResponse  = search.SyncCompanyResponse

	SearchSvr interface {
		Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
		SearchCompany(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
		SearchPeople(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchPeopleResponse, error)
		// 同步企业信息的接口
		SyncCompany(ctx context.Context, in *SyncCompanyRequest, opts ...grpc.CallOption) (*SyncCompanyResponse, error)
	}

	defaultSearchSvr struct {
		cli zrpc.Client
	}
)

func NewSearchSvr(cli zrpc.Client) SearchSvr {
	return &defaultSearchSvr{
		cli: cli,
	}
}

func (m *defaultSearchSvr) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := search.NewSearchSvrClient(m.cli.Conn())
	return client.Search(ctx, in, opts...)
}

func (m *defaultSearchSvr) SearchCompany(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := search.NewSearchSvrClient(m.cli.Conn())
	return client.SearchCompany(ctx, in, opts...)
}

func (m *defaultSearchSvr) SearchPeople(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchPeopleResponse, error) {
	client := search.NewSearchSvrClient(m.cli.Conn())
	return client.SearchPeople(ctx, in, opts...)
}

// 同步企业信息的接口
func (m *defaultSearchSvr) SyncCompany(ctx context.Context, in *SyncCompanyRequest, opts ...grpc.CallOption) (*SyncCompanyResponse, error) {
	client := search.NewSearchSvrClient(m.cli.Conn())
	return client.SyncCompany(ctx, in, opts...)
}
