// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.0
// source: rpc/search.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{1}
}

func (x *SearchResponse) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type SearchPeopleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	People *People `protobuf:"bytes,1,opt,name=people,proto3" json:"people,omitempty"`
}

func (x *SearchPeopleResponse) Reset() {
	*x = SearchPeopleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPeopleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPeopleResponse) ProtoMessage() {}

func (x *SearchPeopleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPeopleResponse.ProtoReflect.Descriptor instead.
func (*SearchPeopleResponse) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{2}
}

func (x *SearchPeopleResponse) GetPeople() *People {
	if x != nil {
		return x.People
	}
	return nil
}

type SyncCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *SyncCompanyRequest) Reset() {
	*x = SyncCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCompanyRequest) ProtoMessage() {}

func (x *SyncCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCompanyRequest.ProtoReflect.Descriptor instead.
func (*SyncCompanyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{3}
}

func (x *SyncCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type SyncCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncCompanyResponse) Reset() {
	*x = SyncCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCompanyResponse) ProtoMessage() {}

func (x *SyncCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCompanyResponse.ProtoReflect.Descriptor instead.
func (*SyncCompanyResponse) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{4}
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`                     // 全局唯一ID，但不是主键ID
	TaxCode       string `protobuf:"bytes,2,opt,name=TaxCode,proto3" json:"TaxCode,omitempty"`             // 税号
	Logo          string `protobuf:"bytes,3,opt,name=Logo,proto3" json:"Logo,omitempty"`                   // LOGO
	CompanyName   string `protobuf:"bytes,4,opt,name=CompanyName,proto3" json:"CompanyName,omitempty"`     // 企业名字
	CompanyType   string `protobuf:"bytes,5,opt,name=CompanyType,proto3" json:"CompanyType,omitempty"`     // 企业类型  民营？国有？外资？工商个体户？
	CompanyStatus string `protobuf:"bytes,6,opt,name=CompanyStatus,proto3" json:"CompanyStatus,omitempty"` // 状态，存续？在业？
	OrgCode       string `protobuf:"bytes,7,opt,name=OrgCode,proto3" json:"OrgCode,omitempty"`
	RegAddr       string `protobuf:"bytes,8,opt,name=RegAddr,proto3" json:"RegAddr,omitempty"`
	ActAddr       string `protobuf:"bytes,9,opt,name=ActAddr,proto3" json:"ActAddr,omitempty"`
	WebSite       string `protobuf:"bytes,10,opt,name=WebSite,proto3" json:"WebSite,omitempty"`
	RegDate       string `protobuf:"bytes,11,opt,name=RegDate,proto3" json:"RegDate,omitempty"`
	Tags          string `protobuf:"bytes,12,opt,name=Tags,proto3" json:"Tags,omitempty"`                 // 标签
	RegCapAmount  string `protobuf:"bytes,13,opt,name=RegCapAmount,proto3" json:"RegCapAmount,omitempty"` // 注册资本
	Brand         string `protobuf:"bytes,14,opt,name=Brand,proto3" json:"Brand,omitempty"`               // 商标/品牌
	Province      string `protobuf:"bytes,15,opt,name=Province,proto3" json:"Province,omitempty"`
	City          string `protobuf:"bytes,16,opt,name=City,proto3" json:"City,omitempty"`
	Town          string `protobuf:"bytes,17,opt,name=Town,proto3" json:"Town,omitempty"`
	IndustryL1    string `protobuf:"bytes,18,opt,name=IndustryL1,proto3" json:"IndustryL1,omitempty"`
	IndustryL2    string `protobuf:"bytes,19,opt,name=IndustryL2,proto3" json:"IndustryL2,omitempty"`
	IndustryL3    string `protobuf:"bytes,20,opt,name=IndustryL3,proto3" json:"IndustryL3,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{5}
}

func (x *Company) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Company) GetTaxCode() string {
	if x != nil {
		return x.TaxCode
	}
	return ""
}

func (x *Company) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetCompanyType() string {
	if x != nil {
		return x.CompanyType
	}
	return ""
}

func (x *Company) GetCompanyStatus() string {
	if x != nil {
		return x.CompanyStatus
	}
	return ""
}

func (x *Company) GetOrgCode() string {
	if x != nil {
		return x.OrgCode
	}
	return ""
}

func (x *Company) GetRegAddr() string {
	if x != nil {
		return x.RegAddr
	}
	return ""
}

func (x *Company) GetActAddr() string {
	if x != nil {
		return x.ActAddr
	}
	return ""
}

func (x *Company) GetWebSite() string {
	if x != nil {
		return x.WebSite
	}
	return ""
}

func (x *Company) GetRegDate() string {
	if x != nil {
		return x.RegDate
	}
	return ""
}

func (x *Company) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *Company) GetRegCapAmount() string {
	if x != nil {
		return x.RegCapAmount
	}
	return ""
}

func (x *Company) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Company) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Company) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Company) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Company) GetIndustryL1() string {
	if x != nil {
		return x.IndustryL1
	}
	return ""
}

func (x *Company) GetIndustryL2() string {
	if x != nil {
		return x.IndustryL2
	}
	return ""
}

func (x *Company) GetIndustryL3() string {
	if x != nil {
		return x.IndustryL3
	}
	return ""
}

type People struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UId      string `protobuf:"bytes,2,opt,name=UId,proto3" json:"UId,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Desc     string `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
}

func (x *People) Reset() {
	*x = People{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_search_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *People) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*People) ProtoMessage() {}

func (x *People) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_search_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use People.ProtoReflect.Descriptor instead.
func (*People) Descriptor() ([]byte, []int) {
	return file_rpc_search_proto_rawDescGZIP(), []int{6}
}

func (x *People) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *People) GetUId() string {
	if x != nil {
		return x.UId
	}
	return ""
}

func (x *People) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *People) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

var File_rpc_search_proto protoreflect.FileDescriptor

var file_rpc_search_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x3b, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x52, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x12, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa7, 0x04, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x61, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f,
	0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x67, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x43, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x67, 0x43, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x6f, 0x77, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x6f, 0x77, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x31, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x31, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x32, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x32, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x33, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x33, 0x22, 0x60, 0x0a, 0x06,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x32, 0x91,
	0x02, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x76, 0x72, 0x12, 0x37, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_search_proto_rawDescOnce sync.Once
	file_rpc_search_proto_rawDescData = file_rpc_search_proto_rawDesc
)

func file_rpc_search_proto_rawDescGZIP() []byte {
	file_rpc_search_proto_rawDescOnce.Do(func() {
		file_rpc_search_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_search_proto_rawDescData)
	})
	return file_rpc_search_proto_rawDescData
}

var file_rpc_search_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rpc_search_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),        // 0: search.SearchRequest
	(*SearchResponse)(nil),       // 1: search.SearchResponse
	(*SearchPeopleResponse)(nil), // 2: search.SearchPeopleResponse
	(*SyncCompanyRequest)(nil),   // 3: search.SyncCompanyRequest
	(*SyncCompanyResponse)(nil),  // 4: search.SyncCompanyResponse
	(*Company)(nil),              // 5: search.Company
	(*People)(nil),               // 6: search.People
}
var file_rpc_search_proto_depIdxs = []int32{
	5, // 0: search.SearchResponse.company:type_name -> search.Company
	6, // 1: search.SearchPeopleResponse.people:type_name -> search.People
	5, // 2: search.SyncCompanyRequest.company:type_name -> search.Company
	0, // 3: search.SearchSvr.Search:input_type -> search.SearchRequest
	0, // 4: search.SearchSvr.SearchCompany:input_type -> search.SearchRequest
	0, // 5: search.SearchSvr.SearchPeople:input_type -> search.SearchRequest
	3, // 6: search.SearchSvr.SyncCompany:input_type -> search.SyncCompanyRequest
	1, // 7: search.SearchSvr.Search:output_type -> search.SearchResponse
	1, // 8: search.SearchSvr.SearchCompany:output_type -> search.SearchResponse
	2, // 9: search.SearchSvr.SearchPeople:output_type -> search.SearchPeopleResponse
	4, // 10: search.SearchSvr.SyncCompany:output_type -> search.SyncCompanyResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_search_proto_init() }
func file_rpc_search_proto_init() {
	if File_rpc_search_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_search_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPeopleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_search_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*People); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_search_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_search_proto_goTypes,
		DependencyIndexes: file_rpc_search_proto_depIdxs,
		MessageInfos:      file_rpc_search_proto_msgTypes,
	}.Build()
	File_rpc_search_proto = out.File
	file_rpc_search_proto_rawDesc = nil
	file_rpc_search_proto_goTypes = nil
	file_rpc_search_proto_depIdxs = nil
}
