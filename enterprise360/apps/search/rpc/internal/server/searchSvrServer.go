// Code generated by goctl. DO NOT EDIT.
// Source: search.proto

package server

import (
	"context"

	"enterprise360/apps/search/rpc/internal/logic"
	"enterprise360/apps/search/rpc/internal/svc"
	"enterprise360/apps/search/rpc/types/search"
)

type SearchSvrServer struct {
	svcCtx *svc.ServiceContext
	search.UnimplementedSearchSvrServer
}

func NewSearchSvrServer(svcCtx *svc.ServiceContext) *SearchSvrServer {
	return &SearchSvrServer{
		svcCtx: svcCtx,
	}
}

func (s *SearchSvrServer) Search(ctx context.Context, in *search.SearchRequest) (*search.SearchResponse, error) {
	l := logic.NewSearchLogic(ctx, s.svcCtx)
	return l.Search(in)
}

func (s *SearchSvrServer) SearchCompany(ctx context.Context, in *search.SearchRequest) (*search.SearchResponse, error) {
	l := logic.NewSearchCompanyLogic(ctx, s.svcCtx)
	return l.SearchCompany(in)
}

func (s *SearchSvrServer) SearchPeople(ctx context.Context, in *search.SearchRequest) (*search.SearchPeopleResponse, error) {
	l := logic.NewSearchPeopleLogic(ctx, s.svcCtx)
	return l.SearchPeople(in)
}

// 同步企业信息的接口
func (s *SearchSvrServer) SyncCompany(ctx context.Context, in *search.SyncCompanyRequest) (*search.SyncCompanyResponse, error) {
	l := logic.NewSyncCompanyLogic(ctx, s.svcCtx)
	return l.SyncCompany(in)
}
